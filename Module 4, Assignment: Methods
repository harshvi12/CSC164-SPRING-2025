// I wrote all the code submitted OR I have provided citations and references where appropriate.

import java.util.Random;
import java.util.Scanner;

public class Methods {
    static int[][] gameScores = new int[10][2];

    public static void main(String[] args) {
        Random rand = new Random();
        initializeGameScores(rand);

        Scanner scanner = new Scanner(System.in);
        boolean exit = false;

        while (!exit) {
            displayMenu();
            int choice = getUserChoice(scanner);

            switch (choice) {
                case 1 -> displayAverageGameScore();
                case 2 -> displayGameScores(scanner);
                case 3 -> displayAveragePeriodScore(scanner);
                case 4 -> {
                    System.out.println("Exiting the program.");
                    exit = true;
                }
                default -> System.out.println("Invalid choice. Please select a valid option.");
            }
        }
        scanner.close();
    }

    // Initializes game scores with random values (0-50)
    public static void initializeGameScores(Random rand) {
        for (int i = 0; i < 10; i++) {
            gameScores[i][0] = rand.nextInt(51);
            gameScores[i][1] = rand.nextInt(51);
        }
    }

    // Displays the menu options
    public static void displayMenu() {
        System.out.println("\nMenu:");
        System.out.println("1. View team's average points per game");
        System.out.println("2. View game scores for a match");
        System.out.println("3. View team's average points per period");
        System.out.println("4. Exit");
    }

    // Gets user choice with validation
    public static int getUserChoice(Scanner scanner) {
        int choice = -1;
        while (true) {
            try {
                System.out.print("Enter your choice (1-4): ");
                choice = Integer.parseInt(scanner.nextLine());
                if (choice >= 1 && choice <= 4) break;
                else System.out.println("Invalid choice. Please enter a number between 1 and 4.");
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a number.");
            }
        }
        return choice;
    }

    // Calculates and displays the average points per game
    public static void displayAverageGameScore() {
        int totalPoints = 0;
        for (int[] game : gameScores) {
            totalPoints += game[0] + game[1];
        }
        double avgGameScore = (double) totalPoints / gameScores.length;
        System.out.printf("Average points per game: %.2f\n", avgGameScore);
    }

    // Displays scores for a specific game
    public static void displayGameScores(Scanner scanner) {
        int matchNumber = getValidInput(scanner, "Enter match number (1-10): ", 1, 10);
        int period1 = gameScores[matchNumber - 1][0];
        int period2 = gameScores[matchNumber - 1][1];
        System.out.printf("Game %d - Period 1: %d, Period 2: %d, Total: %d\n",
                matchNumber, period1, period2, (period1 + period2));
    }

    // Calculates and displays average points per period
    public static void displayAveragePeriodScore(Scanner scanner) {
        int period = getValidInput(scanner, "Enter period number (1 or 2): ", 1, 2);
        int totalPoints = 0;
        for (int[] game : gameScores) {
            totalPoints += game[period - 1];
        }
        double avgPeriodScore = (double) totalPoints / gameScores.length;
        System.out.printf("Average points for period %d: %.2f\n", period, avgPeriodScore);
    }

    // Utility method for input validation
    public static int getValidInput(Scanner scanner, String prompt, int min, int max) {
        int input;
        while (true) {
            try {
                System.out.print(prompt);
                input = Integer.parseInt(scanner.nextLine());
                if (input >= min && input <= max) break;
                else System.out.printf("Invalid input. Please enter a number between %d and %d.\n", min, max);
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a number.");
            }
        }
        return input;
    }
}
